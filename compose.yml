volumes:
  chatbot_data:
    driver: local
  crypto_data:
    driver: local

networks:
  tp4-network:
    driver: bridge

services:
  pgvector:
    container_name: pgdb-store
    image: 'pgvector/pgvector:pg16'
    env_file:
      - ./.env
    volumes:
      - chatbot_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - tp4-network
  tp4-gateway-service:
    build: ./gateway-service
    container_name: tp4-gateway-service
    ports:
      - "8888:8888"
    expose:
      - "8888"
    env_file:
      - ./.env
    depends_on:
      tp4-config-service:
        condition: service_healthy
    networks:
      - tp4-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "${GATEWAY_SERVICE_URL}/actuator/health" ]
      interval: 10s
      retries: 4

  tp4-discovery-service:
    build: ./discovery-service
    container_name: tp4-discovery-service
    env_file:
      - ./.env
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: [ "CMD", "curl", "-f", "${DISCOVERY_BASE_URL}/actuator/health" ]
      interval: 10s
      retries: 4
    networks:
      - tp4-network

  tp4-config-service:
    build: ./config-service
    container_name: tp4-config-service
    ports:
      - '9999:9999'
    expose:
      - '9999'
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "${CONFIG_SERVICE_URL}/actuator/health" ]
      interval: 10s
      retries: 4
    depends_on:
      tp4-discovery-service:
        condition: service_healthy
    networks:
      - tp4-network

  tp4-rag-service:
    build: ./rag-service
    container_name: tp4-rag-service
    ports:
      - "8080:8080"
    expose:
      - "8080"
    env_file:
      - ./.env
    depends_on:
      tp4-config-service:
        condition: service_healthy
    networks:
      - tp4-network

  tp4-crypto-service:
    build: ./crypto-service
    container_name: tp4-crypto-service
    ports:
      - "8081:8081"
    volumes:
      - 'crypto_data:/h2-dbs'
    expose:
      - "8081"
    env_file:
      - ./.env
    depends_on:
      tp4-config-service:
        condition: service_healthy
    networks:
      - tp4-network
  tp4-front-ui:
    build: ./FrontEnd-UI
    container_name: tp4-front-ui
    ports:
      - '80:80'
    expose:
      - '80'
    depends_on:
      tp4-gateway-service:
        condition: service_healthy
